//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension appbskytypes {
    class FeedDescribeFeedGenerator_Feed: Codable {
        var uri: String

        init(uri: String) {
            self.uri = uri
        }

        enum CodingKeys: String, CodingKey {
            case uri
        }
    }

    class FeedDescribeFeedGenerator_Links: Codable {
        var privacyPolicy: String?
        var termsOfService: String?

        init(privacyPolicy: String?, termsOfService: String?) {
            self.privacyPolicy = privacyPolicy
            self.termsOfService = termsOfService
        }

        enum CodingKeys: String, CodingKey {
            case privacyPolicy
            case termsOfService
        }
    }

    class FeedDescribeFeedGenerator_Output: Codable {
        var did: String
        var feeds: [FeedDescribeFeedGenerator_Feed]
        var links: FeedDescribeFeedGenerator_Links?

        init(did: String, feeds: [FeedDescribeFeedGenerator_Feed], links: FeedDescribeFeedGenerator_Links?) {
            self.did = did
            self.feeds = feeds
            self.links = links
        }

        enum CodingKeys: String, CodingKey {
            case did
            case feeds
            case links
        }
    }

    static func FeedDescribeFeedGenerator(client: any XRPCClientProtocol) async throws -> FeedDescribeFeedGenerator_Output {
        let params: Bool? = nil
        return try await client.fetch(endpoint: "app.bsky.feed.describeFeedGenerator", contentType: "*/*", httpMethod: .get, params: params, input: Bool?.none, retry: true)
    }
}
