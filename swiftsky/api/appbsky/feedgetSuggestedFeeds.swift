//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension appbskytypes {
    class FeedGetSuggestedFeeds_Output: Codable {
        var cursor: String?
        var feeds: [FeedDefs_GeneratorView]

        init(cursor: String?, feeds: [FeedDefs_GeneratorView]) {
            self.cursor = cursor
            self.feeds = feeds
        }

        enum CodingKeys: String, CodingKey {
            case cursor
            case feeds
        }
    }

    static func FeedGetSuggestedFeeds(client: any XRPCClientProtocol, cursor: String?, limit: Int?) async throws -> FeedGetSuggestedFeeds_Output {
        let params: Parameters = ["cursor": .string(cursor), "limit": .integer(limit)]
        return try await client.fetch(endpoint: "app.bsky.feed.getSuggestedFeeds", contentType: "*/*", httpMethod: .get, params: params, input: Bool?.none, retry: true)
    }
}
