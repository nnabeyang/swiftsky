//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension comatprototypes {
    class ServerReserveSigningKey_Input: Codable {
        var did: String?

        init(did: String?) {
            self.did = did
        }

        enum CodingKeys: String, CodingKey {
            case did
        }
    }

    class ServerReserveSigningKey_Output: Codable {
        var signingKey: String

        init(signingKey: String) {
            self.signingKey = signingKey
        }

        enum CodingKeys: String, CodingKey {
            case signingKey
        }
    }

    static func ServerReserveSigningKey(client: any XRPCClientProtocol, input: ServerReserveSigningKey_Input) async throws -> ServerReserveSigningKey_Output {
        let params: Bool? = nil
        return try await client.fetch(endpoint: "com.atproto.server.reserveSigningKey", contentType: "application/json", httpMethod: .post, params: params, input: input, retry: true)
    }
}
