//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension comatprototypes {
    class SyncListBlobs_Output: Codable {
        var cids: [String]
        var cursor: String?

        init(cids: [String], cursor: String?) {
            self.cids = cids
            self.cursor = cursor
        }

        enum CodingKeys: String, CodingKey {
            case cids
            case cursor
        }
    }

    static func SyncListBlobs(client: any XRPCClientProtocol, cursor: String?, did: String, limit: Int?, since: String?) async throws -> SyncListBlobs_Output {
        let params: Parameters = ["cursor": .string(cursor), "did": .string(did), "limit": .integer(limit), "since": .string(since)]
        return try await client.fetch(endpoint: "com.atproto.sync.listBlobs", contentType: "*/*", httpMethod: .get, params: params, input: Bool?.none, retry: true)
    }
}
